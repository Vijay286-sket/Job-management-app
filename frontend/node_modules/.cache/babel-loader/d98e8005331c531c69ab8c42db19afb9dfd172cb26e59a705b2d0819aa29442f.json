{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive\\\\Documents\\\\web project\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authService } from '../services/authService';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Check if user is logged in on app start\n  useEffect(() => {\n    const initializeAuth = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (token) {\n          // Verify token and get user profile\n          const userData = await authService.getProfile();\n          setUser(userData.user);\n        }\n      } catch (error) {\n        // Token is invalid, remove it\n        localStorage.removeItem('token');\n        console.error('Token verification failed:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    initializeAuth();\n  }, []);\n\n  // Login function\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      const response = await authService.login(email, password);\n\n      // Store token in localStorage\n      localStorage.setItem('token', response.token);\n\n      // Set user in state\n      setUser(response.user);\n      toast.success(`Welcome back, ${response.user.firstName}!`);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed';\n      toast.error(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Register function\n  const register = async userData => {\n    try {\n      setLoading(true);\n      const response = await authService.register(userData);\n\n      // Store token in localStorage\n      localStorage.setItem('token', response.token);\n\n      // Set user in state\n      setUser(response.user);\n      toast.success(`Welcome to our platform, ${response.user.firstName}!`);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data, _error$response3, _error$response3$data;\n      let errorMessage = 'Registration failed';\n      if ((_error$response2 = error.response) !== null && _error$response2 !== void 0 && (_error$response2$data = _error$response2.data) !== null && _error$response2$data !== void 0 && _error$response2$data.errors && Array.isArray(error.response.data.errors)) {\n        // Handle validation errors\n        errorMessage = error.response.data.errors.map(err => err.msg || err.message).join(', ');\n      } else if ((_error$response3 = error.response) !== null && _error$response3 !== void 0 && (_error$response3$data = _error$response3.data) !== null && _error$response3$data !== void 0 && _error$response3$data.message) {\n        errorMessage = error.response.data.message;\n      }\n      toast.error(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    toast.success('Logged out successfully');\n  };\n\n  // Update profile function\n  const updateProfile = async profileData => {\n    try {\n      setLoading(true);\n      const response = await authService.updateProfile(profileData);\n\n      // Update user in state\n      setUser(response.user);\n      toast.success('Profile updated successfully');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response4, _error$response4$data, _error$response5, _error$response5$data;\n      let errorMessage = 'Profile update failed';\n      if ((_error$response4 = error.response) !== null && _error$response4 !== void 0 && (_error$response4$data = _error$response4.data) !== null && _error$response4$data !== void 0 && _error$response4$data.errors && Array.isArray(error.response.data.errors)) {\n        errorMessage = error.response.data.errors.map(err => err.msg || err.message).join(', ');\n      } else if ((_error$response5 = error.response) !== null && _error$response5 !== void 0 && (_error$response5$data = _error$response5.data) !== null && _error$response5$data !== void 0 && _error$response5$data.message) {\n        errorMessage = error.response.data.message;\n      }\n      toast.error(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Check if user has specific role\n  const hasRole = role => {\n    return (user === null || user === void 0 ? void 0 : user.role) === role;\n  };\n\n  // Check if user is job seeker\n  const isJobSeeker = () => hasRole('jobseeker');\n\n  // Check if user is recruiter\n  const isRecruiter = () => hasRole('recruiter');\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    updateProfile,\n    hasRole,\n    isJobSeeker,\n    isRecruiter\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authService","toast","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","initializeAuth","token","localStorage","getItem","userData","getProfile","error","removeItem","console","login","email","password","response","setItem","success","firstName","_error$response","_error$response$data","errorMessage","data","message","register","_error$response2","_error$response2$data","_error$response3","_error$response3$data","errors","Array","isArray","map","err","msg","join","logout","updateProfile","profileData","_error$response4","_error$response4$data","_error$response5","_error$response5$data","hasRole","role","isJobSeeker","isRecruiter","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hp/OneDrive/Documents/web project/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authService } from '../services/authService';\nimport toast from 'react-hot-toast';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Check if user is logged in on app start\n  useEffect(() => {\n    const initializeAuth = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (token) {\n          // Verify token and get user profile\n          const userData = await authService.getProfile();\n          setUser(userData.user);\n        }\n      } catch (error) {\n        // Token is invalid, remove it\n        localStorage.removeItem('token');\n        console.error('Token verification failed:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    initializeAuth();\n  }, []);\n\n  // Login function\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      const response = await authService.login(email, password);\n      \n      // Store token in localStorage\n      localStorage.setItem('token', response.token);\n      \n      // Set user in state\n      setUser(response.user);\n      \n      toast.success(`Welcome back, ${response.user.firstName}!`);\n      return { success: true };\n    } catch (error) {\n      const errorMessage = error.response?.data?.message || 'Login failed';\n      toast.error(errorMessage);\n      return { success: false, error: errorMessage };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Register function\n  const register = async (userData) => {\n    try {\n      setLoading(true);\n      const response = await authService.register(userData);\n      \n      // Store token in localStorage\n      localStorage.setItem('token', response.token);\n      \n      // Set user in state\n      setUser(response.user);\n      \n      toast.success(`Welcome to our platform, ${response.user.firstName}!`);\n      return { success: true };\n    } catch (error) {\n      let errorMessage = 'Registration failed';\n      \n      if (error.response?.data?.errors && Array.isArray(error.response.data.errors)) {\n        // Handle validation errors\n        errorMessage = error.response.data.errors.map(err => err.msg || err.message).join(', ');\n      } else if (error.response?.data?.message) {\n        errorMessage = error.response.data.message;\n      }\n      \n      toast.error(errorMessage);\n      return { success: false, error: errorMessage };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    toast.success('Logged out successfully');\n  };\n\n  // Update profile function\n  const updateProfile = async (profileData) => {\n    try {\n      setLoading(true);\n      const response = await authService.updateProfile(profileData);\n      \n      // Update user in state\n      setUser(response.user);\n      \n      toast.success('Profile updated successfully');\n      return { success: true };\n    } catch (error) {\n      let errorMessage = 'Profile update failed';\n      \n      if (error.response?.data?.errors && Array.isArray(error.response.data.errors)) {\n        errorMessage = error.response.data.errors.map(err => err.msg || err.message).join(', ');\n      } else if (error.response?.data?.message) {\n        errorMessage = error.response.data.message;\n      }\n      \n      toast.error(errorMessage);\n      return { success: false, error: errorMessage };\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Check if user has specific role\n  const hasRole = (role) => {\n    return user?.role === role;\n  };\n\n  // Check if user is job seeker\n  const isJobSeeker = () => hasRole('jobseeker');\n\n  // Check if user is recruiter\n  const isRecruiter = () => hasRole('recruiter');\n\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    updateProfile,\n    hasRole,\n    isJobSeeker,\n    isRecruiter\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}